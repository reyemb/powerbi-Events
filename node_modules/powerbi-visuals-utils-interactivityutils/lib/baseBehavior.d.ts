import { SelectableDataPoint } from "./interactivitySelectionService";
import { IBehaviorOptions, ISelectionHandler, IInteractiveBehavior, BaseDataPoint } from "./interactivityBaseService";
import { Selection } from "d3-selection";
export interface BaseBehaviorOptions<SelectableDataPointType extends BaseDataPoint> extends IBehaviorOptions<SelectableDataPointType> {
    elementsSelection: Selection<any, SelectableDataPoint, any, any>;
    clearCatcherSelection: Selection<any, any, any, any>;
}
export declare class BaseBehavior<SelectableDataPointType extends BaseDataPoint> implements IInteractiveBehavior {
    protected options: BaseBehaviorOptions<SelectableDataPointType>;
    protected selectionHandler: ISelectionHandler;
    protected bindClick(): void;
    protected bindClearCatcher(): void;
    protected bindContextMenu(): void;
    protected bindContextMenuToClearCatcher(): void;
    bindEvents(options: BaseBehaviorOptions<SelectableDataPointType>, selectionHandler: ISelectionHandler): void;
    renderSelection(hasSelection: boolean): void;
}
