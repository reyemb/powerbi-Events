import { ITooltipServiceWrapper, TooltipServiceWrapperOptions } from "./tooltipInterfaces";
import { Selection } from "d3-selection";
import powerbi from "powerbi-visuals-api";
import ISelectionId = powerbi.visuals.ISelectionId;
import ITooltipService = powerbi.extensibility.ITooltipService;
import VisualTooltipDataItem = powerbi.extensibility.VisualTooltipDataItem;
export declare function createTooltipServiceWrapper(tooltipService: ITooltipService, rootElement?: Element, // this argument is deprecated and is optional now, just to maintain visuals with tooltiputils logic written for versions bellow 3.0.0
handleTouchDelay?: number): ITooltipServiceWrapper;
export declare class TooltipServiceWrapper implements ITooltipServiceWrapper {
    private handleTouchTimeoutId;
    private visualHostTooltipService;
    private handleTouchDelay;
    constructor(options: TooltipServiceWrapperOptions);
    addTooltip<T>(selection: Selection<any, any, any, any>, getTooltipInfoDelegate: (datapoint: T) => VisualTooltipDataItem[], getDataPointIdentity?: (datapoint: T) => ISelectionId, reloadTooltipDataOnMouseMove?: boolean): void;
    cancelTouchTimeoutEvents(): void;
    hide(): void;
}
