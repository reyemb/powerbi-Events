import { IRect } from "./rect/irect";
import { IPoint, ISize, IThickness } from "./shapesInterfaces";
export declare function getOffset(rect: IRect): IPoint;
export declare function getSize(rect: IRect): ISize;
export declare function setSize(rect: IRect, value: ISize): void;
export declare function right(rect: IRect): number;
export declare function bottom(rect: IRect): number;
export declare function topLeft(rect: IRect): IPoint;
export declare function topRight(rect: IRect): IPoint;
export declare function bottomLeft(rect: IRect): IPoint;
export declare function bottomRight(rect: IRect): IPoint;
export declare function equals(rect: IRect, other: IRect): boolean;
export declare function clone(rect: IRect): IRect;
export declare function toString(rect: IRect): string;
export declare function offset(rect: IRect, offsetX: number, offsetY: number): IRect;
export declare function add(rect: IRect, rect2: IRect): IRect;
export declare function subtract(rect: IRect, rect2: IRect): IRect;
export declare function inflate(rect: IRect, padding: IThickness): IRect;
export declare function deflate(rect: IRect, padding: IThickness): IRect;
export declare function inflateBy(rect: IRect, padding: number): IRect;
export declare function deflateBy(rect: IRect, padding: number): IRect;
/**
 * Get closest point.
 *
 * @return the closest point on the rect to the (x,y) point given.
 * In case the (x,y) given is inside the rect, (x,y) will be returned.
 * Otherwise, a point on a border will be returned.
 */
export declare function getClosestPoint(rect: IRect, x: number, y: number): IPoint;
export declare function equal(rect1: IRect, rect2: IRect): boolean;
export declare function equalWithPrecision(rect1: IRect, rect2: IRect): boolean;
export declare function isEmpty(rect: IRect): boolean;
export declare function containsPoint(rect: IRect, point: IPoint): boolean;
export declare function isIntersecting(rect1: IRect, rect2: IRect): boolean;
export declare function intersect(rect1: IRect, rect2: IRect): IRect;
export declare function combine(rect1: IRect, rect2: IRect): IRect;
export declare function getCentroid(rect: IRect): IPoint;
